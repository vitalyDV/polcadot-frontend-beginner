{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","BlockNumber.js","BlockQuery.js","NodeInfo.js","App.js","index.js"],"names":["configEnv","require","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","types","CUSTOM_TYPES","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","Main","finalized","useState","blockNumber","setBlockNumber","setBlockNumberTimer","blockHash","setBlockHash","bestNumber","derive","chain","bestNumberFinalized","useEffect","unsubscribeAll","lastNumber","number","toNumber","getHashdata","unsub","catch","getBlockHash","hash","toHex","e","timer","time","id","setInterval","clearInterval","Grid","Column","Card","fluid","Content","Header","Description","BlockNumber","searchValue","setSearchValue","searchResult","setSearchResult","badSearch","as","dividing","style","marginTop","columns","Row","width","Input","onChange","searchText","target","placeholder","Button","onClick","preventDefault","length","trim","substr","getHeader","block","parsed","JSON","stringify","color","List","Item","BlockQuery","nodeInfo","setNodeInfo","Promise","all","system","version","nodeName","nodeVersion","getInfo","marginBottom","textAlign","NodeInfo","accountAddress","loader","getPair","text","Dimmer","active","Loader","size","centered","padded","Message","negative","compact","floating","header","content","createRef","Container","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56f26de8.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\nimport queryString from 'query-string';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\nconst parsedQuery = queryString.parse(window.location.search);\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\nconsole.log(`Connected socket: ${connectedSocket}`);\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.CUSTOM_TYPES,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }));\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts);\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key]);\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return <SubstrateContext.Provider value={state}>\n    {props.children}\n  </SubstrateContext.Provider>;\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Card } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const { finalized } = props;\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0);\n  const [blockHash, setBlockHash] = useState(0);\n\n\n  const bestNumber = finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n  let lastNumber = 0;\n    bestNumber(number => {\n      lastNumber = number.toNumber();\n      setBlockNumber(lastNumber);\n      getHashdata(lastNumber);\n      setBlockNumberTimer(0);\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n      \n    const getHashdata = async (number) => {\n      try {\n        api.rpc.chain.getBlockHash(number).then( hash => {\n          setBlockHash(hash.toHex());\n        })\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    \n    return () => unsubscribeAll && unsubscribeAll();\n  }, [bestNumber]);\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1);\n  };\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, []);\n  \n  \n  return (\n    <Grid.Column>\n      <Card fluid>\n        <Card.Content>\n          <Card.Header>Last block number: {blockNumber}</Card.Header>\n          <Card.Description>Last block hash: {blockHash}</Card.Description>\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n\n}\n  \nexport default function BlockNumber (props) {\n  const { api } = useSubstrate();\n  return api.derive &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.derive.chain.bestNumberFinalized ? (\n      <Main {...props} />\n    ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Input, Header, Button, Grid, List } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\nimport moment from 'moment';\n\nfunction Main(props){\n  const { api } = useSubstrate();\n  \n  let [searchValue, setSearchValue] = useState(\"\");\n  let [searchResult, setSearchResult] = useState({number: \"\", hash: \"\"});\n  \n  function doSearch(e) {    \n    e.preventDefault();    \n    if(searchValue.length < 1) return;\n    console.log('searching....', searchValue);\n    try {\n      if(searchValue.trim().substr(0,2) == \"0x\"){\n        //hash suplied\n        api.rpc.chain.getHeader(searchValue).then( block => {\n          let parsed = JSON.parse(JSON.stringify(block));\n          setSearchResult({number: parsed.number, hash: searchValue});\n        }).catch( e => {\n          badSearch();\n        });\n      } else {\n        api.rpc.chain.getBlockHash(searchValue).then( hash => {\n          console.log('re-searching....', hash.toHex());\n          setSearchResult({hash: hash.toHex(), number: searchValue});\n        }).catch( e => {\n          badSearch();\n        });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  \n  function badSearch(){\n      setSearchResult({number: null, hash: 'Bad data for search'});\n  }\n  function searchChange(searchText){\n    setSearchValue(searchText);\n  }\n  \n    return ( \n    <div>\n    <Header as='h3' dividing style={{ marginTop: '3em' }}>\n      Search for blocks\n    </Header>\n        <Grid columns='equal'>\n          <Grid.Row>\n            <Grid.Column width={12}>\n              <Input value={searchValue} onChange={e => searchChange(e.target.value)} fluid placeholder='block number or hash' />\n            </Grid.Column>\n            <Grid.Column>\n              <Button onClick={doSearch} color='green'>Search</Button>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n          {searchResult.hash.length > 0 ?\n          <Grid.Column>\n            <Header as='h5' dividing style={{ marginTop: '1em' }}>\n              Search result\n            </Header>\n            <List>\n              <List.Item>Block # {searchResult.number}</List.Item>\n              <List.Item>Hash {searchResult.hash}</List.Item>\n            </List>\n          </Grid.Column>\n          : ''\n          }\n          </Grid.Row>\n        </Grid>\n    </div>\n    );\n}\n\nexport default function BlockQuery (props) {\n  return (\n      <Main {...props} />\n    ) \n}","import React, { useEffect, useState } from 'react';\nimport { Header, } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const [nodeInfo, setNodeInfo] = useState({});\n\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([\n          api.rpc.system.chain(),\n          api.rpc.system.name(),\n          api.rpc.system.version()\n        ]);\n        setNodeInfo({ chain, nodeName, nodeVersion });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getInfo();\n  }, [api.rpc.system]);\n\n  return (\n    <Header as='h5' style={{ marginBottom: '2em', textAlign: 'right', color: '#646464' }}>\n      {nodeInfo.nodeName} on {nodeInfo.chain}\n    </Header>\n  );\n}\n\nexport default function NodeInfo (props) {\n  const { api } = useSubstrate();\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.system.chain &&\n    api.rpc.system.name &&\n    api.rpc.system.version ? (\n      <Main {...props} />\n    ) : null;\n}\n","import React, { useState, createRef } from 'react';\nimport { Container, Dimmer, Loader, Grid, Header, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\n\nimport BlockNumber from './BlockNumber';\nimport BlockQuery from './BlockQuery';\nimport NodeInfo from './NodeInfo';\n\nfunction Main () {\n  const [accountAddress, setAccountAddress] = useState(null);\n  const { apiState, keyring, keyringState, apiError } = useSubstrate();\n  const accountPair =\n    accountAddress &&\n    keyringState === 'READY' &&\n    keyring.getPair(accountAddress);\n\n  const loader = text =>\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>;\n\n  const message = err =>\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message negative compact floating\n          header='Error Connecting to Substrate'\n          content={`${err}`}\n        />\n      </Grid.Column>\n    </Grid>;\n\n  if (apiState === 'ERROR') return message(apiError);\n  else if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n  if (keyringState !== 'READY') {\n    return loader('Loading accounts (please review any extension\\'s authorization)');\n  }\n\n  const contextRef = createRef();\n\n  return (\n    <Container style={{ marginTop: '3em' }}>\n    <Header as='h2' dividing>\n      BEGINNER CHALLENGES Front-End Javascript block explorer\n    </Header>\n      <NodeInfo />\n      <BlockNumber />\n      <BlockQuery/>\n    </Container>\n  );\n}\n\nexport default function App () {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}